# test_jsonschema_unix.py
# A program to try the jsonschema Python library.
# Uses it to validate some JSON data.
# Follows the Unix convention of writing normal output to the standard 
# output (stdout), and errors to the standard error output (stderr).
# Author: Vasudev Ram
# Copyright 2015 Vasudev Ram

from __future__ import print_function
import sys
import json
import jsonschema
from jsonschema import validate

# Create the schema, as a nested Python dict, 
# specifying the data elements, their names and their types.
schema = {
    "type" : "object",
    "properties" : {
        "price" : {"type" : "number"},
        "name" : {"type" : "string"},
    },
}

print("Testing use of jsonschema for data validation.")
print("Using the following schema:")
print(schema)
print("Pretty-printed schema:")
print(json.dumps(schema, indent=4))

# The data to be validated:
# Two records OK, three records in ERROR.
data = \
[
    { "name": "Apples", "price": 10},
    { "name": "Bananas", "price": 20},
    { "name": "Cherries", "price": "thirty"},
    { "name": 40, "price": 40},
    { "name": 50, "price": "fifty"}
]

print("Raw input data:")
print(data)
print("Pretty-printed input data:")
print(json.dumps(data, indent=4))

print("Validating the input data using jsonschema:")
for idx, item in enumerate(data):
    try:
        validate(item, schema)
        sys.stdout.write("Record #{}: OK\n".format(idx))
    except jsonschema.exceptions.ValidationError as ve:
        sys.stderr.write("Record #{}: ERROR\n".format(idx))
        sys.stderr.write(str(ve) + "\n")




# {'data': [[1638617263200, 0.0], [1638620863200, 0.0], [1638624463200, 0.0], [1638628063200, 0.0], [1638631663200, 0.0], [1638635263200, 0.0], [1638638863200, 0.0], [1638642463200, 0.0], [1638646063200, 0.0], [1638649663200, 0.0], [1638653263200, 0.0], [1638656863200, 0.0], [1638660463200, 0.0], [1638664063200, 0.0], [1638667663200, 0.0], [1638671263200, 0.0], [1638674863200, 0.0], [1638678463200, 0.0], [1638682063200, 0.0], [1638685663200, 0.0], [1638689263200, 0.0], [1638692863200, 0.0], [1638696463200, 0.0], [1638700063200, 0.0], [1638703663200, 0.0], [1638707263200, 0.0], [1638710863200, 0.0], [1638714463200, 0.0], [1638718063200, 0.0], [1638721663200, 0.0], [1638725263200, 0.0], [1638728863200, 0.0], [1638732463200, 0.0], [1638736063200, 0.0], [1638739663200, 0.0], [1638743263200, 0.0], [1638746863200, 0.0], [1638750463200, 0.0], [1638754063200, 0.0], [1638757663200, 0.0], [1638761263200, 0.0], [1638764863200, 0.0], [1638768463200, 0.0], [1638772063200, 0.0], [1638775663200, 0.0], [1638779263200, 0.0], [1638782863200, 0.0], [1638786463200, 0.0], [1638790063200, 0.0], [1638793663200, 0.0], [1638797263200, 0.0], [1638800863200, 0.0], [1638804463200, 0.0], [1638808063200, 0.0], [1638811663200, 0.0], [1638815263200, 0.0], [1638818863200, 0.0], [1638822463200, 0.0], [1638826063200, 0.0], [1638829663200, 0.0], [1638833263200, 0.0], [1638836863200, 0.0], [1638840463200, 0.0], [1638844063200, 0.0], [1638847663200, 0.0], [1638851263200, 0.0], [1638854863200, 0.0], [1638858463200, 0.0], [1638862063200, 0.0], [1638865663200, 0.0], [1638869263200, 0.0], [1638872863200, 0.0], [1638876463200, 0.0], [1638880063200, 0.0], [1638883663200, 0.0], [1638887263200, 0.0], [1638890863200, 0.0], [1638894463200, 0.0], [1638898063200, 0.0], [1638901663200, 0.0], [1638905263200, 0.0], [1638908863200, 0.0], [1638912463200, 0.0], [1638916063200, 0.0], [1638919663200, 0.0], [1638923263200, 0.0], [1638926863200, 0.0], [1638930463200, 0.0], [1638934063200, 0.0], [1638937663200, 0.0], [1638941263200, 0.0], [1638944863200, 0.0], [1638948463200, 0.0], [1638952063200, 0.0], [1638955663200, 0.0], [1638959263200, 0.0], [1638962863200, 0.0], [1638966463200, 0.0], [1638970063200, 0.0], [1638973663200, 0.0], [1638977263200, 0.0], [1638980863200, 0.0], [1638984463200, 0.0], [1638988063200, 0.0], [1638991663200, 0.0], [1638995263200, 0.0], [1638998863200, 0.0], [1639002463200, 0.0], [1639006063200, 0.0], [1639009663200, 0.0], [1639013263200, 0.0], [1639016863200, 0.0], [1639020463200, 0.0], [1639024063200, 0.0], [1639027663200, 0.0], [1639031263200, 0.0], [1639034863200, 0.0], [1639038463200, 0.0], [1639042063200, 0.0], [1639045663200, 0.0], [1639049263200, 0.0], [1639052863200, 0.0], [1639056463200, 0.0], [1639060063200, 0.0], [1639063663200, 0.0], [1639067263200, 0.0], [1639070863200, 0.0], [1639074463200, 0.0], [1639078063200, 0.0], [1639081663200, 0.0], [1639085263200, 0.0], [1639088863200, 0.0], [1639092463200, 0.0], [1639096063200, 0.0], [1639099663200, 0.0], [1639103263200, 0.0], [1639106863200, 0.0], [1639110463200, 0.0], [1639114063200, 0.0], [1639117663200, 0.0], [1639121263200, 0.0], [1639124863200, 0.0], [1639128463200, 0.0], [1639132063200, 0.0], [1639135663200, 0.0], [1639139263200, 0.0], [1639142863200, 0.0], [1639146463200, 0.0], [1639150063200, 0.0], [1639153663200, 0.0], [1639157263200, 0.0], [1639160863200, 0.0], [1639164463200, 0.0], [1639168063200, 0.0], [1639171663200, 0.0], [1639175263200, 0.0], [1639178863200, 0.0], [1639182463200, 0.0], [1639186063200, 0.0], [1639189663200, 0.0], [1639193263200, 0.0], [1639196863200, 0.0], [1639200463200, 0.0], [1639204063200, 0.0], [1639207663200, 0.0], [1639211263200, 0.0], [1639214863200, 0.0], [1639218463200, 0.0]], 'model_setting': {'config': '"settings":{"growth": "linear",         "changepoint_prior_scale": 30,         "seasonality_prior_scale": 35,         "interval_width": 0.98,         "daily_seasonality": false,         "weekly_seasonality": false,         "yearly_seasonality": false,         "seasonality": [             {                 "name": "hour",                 "period": 0.0417, "fourier_order": 5}]}', 'point': 'shymkent/100', 'type': 'PROPHET'}, 'regressor': [[1639222063200], [1639225663200], [1639229263200], [1639232863200], [1639236463200], [1639240063200], [1639243663200], [1639247263200], [1639250863200], [1639254463200], [1639258063200], [1639261663200], [1639265263200], [1639268863200], [1639272463200], [1639276063200], [1639279663200], [1639283263200], [1639286863200], [1639290463200], [1639294063200], [1639297663200], [1639301263200], [1639304863200], [1639308463200], [1639312063200], [1639315663200], [1639319263200], [1639322863200], [1639326463200], [1639330063200], [1639333663200], [1639337263200], [1639340863200], [1639344463200], [1639348063200], [1639351663200], [1639355263200], [1639358863200], [1639362463200], [1639366063200], [1639369663200], [1639373263200], [1639376863200], [1639380463200], [1639384063200], [1639387663200], [1639391263200]]}