version: "3.3"
services:
  
  nginx:
      restart: always
      build: ./nginx
      image: proxy_nginx
      container_name: nginx
      ports:
          - "80:80"
      networks:
          - frontend
      depends_on:
          - mlflow

  operator:
    build: .
    image: operator
    container_name: operator
    ports:
      - 8015:8015
    volumes:
      - ./app:/app
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks: 
      - model
      - backend
    command: gunicorn -b 0.0.0.0:8015 app:api --timeout 600 --worker-class sync --log-level debug
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
      - TRACKING_SERVER=http://138.68.70.41:5000
    depends_on:
      - redis

  celery:
    image: operator_api
    container_name: operator_celery
    volumes:
      - ./app:/app
      - ./app/logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    networks: 
      - backend
    command: celery -A tasks worker --loglevel=info --logfile=logs/celery.log -c 2 -n task_worker
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - operator
      - redis

  redis:
    image: redis:6-alpine
    container_name: operator_redis
    networks: 
      - backend
  
  monitor:
    image: operator_api
    container_name: operator_monitor
    volumes:
      - ./app:/app
      - ./app/logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 5555:5555
    networks: 
      - backend
      - frontend
    command:  flower -A tasks --port=5555 --broker=redis://redis:6379/0
    depends_on:
      - operator
      - redis

  db:
      restart: always
      image: mysql/mysql-server:5.7.28
      container_name: mlflow_db
      expose:
          - "3306"
      networks:
          - backend
      environment:
          - MYSQL_DATABASE=${MYSQL_DATABASE}
          - MYSQL_USER=${MYSQL_USER}
          - MYSQL_PASSWORD=${MYSQL_PASSWORD}
          - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      volumes:
          - dbdata:/var/lib/mysql

  mlflow:
      restart: always
      build: ./mlflow
      image: mlflow_server
      container_name: mlflow_server
      ports:
          - 5000:5000
      networks:
          - frontend
          - backend
      command: 'mlflow server 
              --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} 
              --default-artifact-root file:/usr/local/etc/mlruns 
              --host 0.0.0.0 -p 5000'
      depends_on:
        - db

  # jupyter:
  #     image: prophet-jupyter_hub:latest
  #     build: ./jupyter
  #     container_name: jupyter_hub
  #     ports:
  #         - 8888:8888
  #     volumes:
  #         - ./jupyter/project:/home/project
  #     environment:
  #         - JUPYTER_ENABLE_LAB=yes
  #     networks:
  #         - frontend
  #         - backend
  #     command: jupyterhub --port=8888 #jupyter notebook --allow-root --no-browser --ip='0.0.0.0' --port=8888


volumes:
  dbdata:


networks:
  model:
  backend:
    driver: bridge
  frontend:
    driver: bridge