version: "3.8"
services:
  api:
    build: .
    image: api
    container_name: api
    ports:
      - 8015:8015
    volumes:
      - ./app:/app
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks: 
      - service_network
    command: gunicorn -b 0.0.0.0:8015 app:api #--timeout 600 --worker-class sync --log-level debug
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - redis

  celery:
    image: api
    container_name: celery
    volumes:
      - ./app:/app
      - ./app/logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    networks: 
      - service_network
    command: celery -A tasks worker --loglevel=info --logfile=logs/celery.log -c 2 -n task_worker
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - api
      - redis

  redis:
    image: redis:6-alpine
    container_name: redis
    networks: 
      - service_network
  
  monitor:
    image: api
    container_name: monitor
    volumes:
      - ./app:/app
      - ./app/logs:/app/logs
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 5555:5555
    networks: 
      - service_network
    command:  flower -A tasks --port=5555 --broker=redis://redis:6379/0
    depends_on:
      - api
      - redis

networks:
  service_network:
    driver: bridge
    external: true
